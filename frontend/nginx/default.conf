server {
    listen 80;
    server_name _;

    # 根目录 —— nginx image 中静态文件的位置（我们在 Dockerfile 中把 dist 放在这里）
    root /usr/share/nginx/html;
    index index.html;

    # 直接返回 SW 文件，不被 try_files 转发到 index.html
    # 确保 service worker 在站点根可注册且不会被缓存为过期文件（使用 no-cache）
    location = /sw.js {
        try_files /sw.js =404;
        add_header Cache-Control "no-cache, must-revalidate";
    }

    # 静态资源：对带 hash 的资源可长期缓存，提高性能
    # 匹配常见静态资源后缀（js/css/png/jpg/svg/font 等）
    location ~* \.(?:js|css|jpg|jpeg|png|gif|ico|svg|woff2?|ttf|eot)$ {
        try_files $uri =404;
        # 若你的构建产物文件名包含hash（推荐），可长期缓存
        add_header Cache-Control "public, max-age=31536000, immutable";
        access_log off;
        expires 1y;
    }

    # index.html 和其它 SPA entry-point 不缓存（确保用户能及时拿到新版）
    location = /index.html {
        try_files /index.html =404;
        add_header Cache-Control "no-cache, must-revalidate";
    }

    # API 请求代理到 Spring Boot 服务（容器内部 DNS 名称 'spring'）
    # 使用 /api/ 路径前缀匹配，保留原始路径转发给后端
    location /api/ {
        proxy_pass http://spring:8082;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_connect_timeout 5s;
        proxy_read_timeout 120s;
    }

    # WebSocket（如果后端有 websocket / STOMP / socket.io）
    # 调整 path /ws/ 或按需改为 /socket.io/
    location /ws/ {
        proxy_pass http://spring:8082;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    # SPA fallback —— 所有非文件请求都返回 index.html（支持客户端路由）
    location / {
        try_files $uri $uri/ /index.html;
    }

    # 可选：日志分离（视情况保留/删除）
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;
}
